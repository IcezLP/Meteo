{"version":3,"sources":["components/icon/loading.svg","components/icon/background.jpg","components/icon/background2.jpg","reducers/weatherReducer.js","reducers/errorReducer.js","reducers/index.js","actions/types.js","store.js","components/weather/ForecastItem.js","actions/weatherActions.js","components/icon/Loader.js","components/layout/Footer.js","components/weather/Weather.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","weather","forecast","loading","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","ForecastItem","this","props","table","list","map","item","index","Date","dt_txt","getHours","react_default","a","createElement","key","className","children","dist_default","locale","format","Math","round","main","temp","description","Component","apiKey","setLoadingTrue","setLoadingFalse","Loader","id","src","Loading","alt","Footer","Weather","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","city","units","search","onChange","bind","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","nextProps","_this2","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","getDataByGeolocation","alert","preventDefault","getDataBySearch","weatherItem","_this$props$weather","icon_Loader","weather_ForecastItem","hour","style","background","concat","backgroundDay","backgroundNight","fontSize","sys","country","marginTop","noValidate","htmlFor","hidden","placeholder","message","layout_Footer","connect","dispatch","axios","all","get","then","spread","data","catch","err","response","App","react_redux_es","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1d92c9a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.a2e6c828.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.e6656612.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background2.ff09edbe.jpg\";","import { LOADING, GET_WEATHER, LOADED, GET_FORECAST } from '../actions/types';\r\n\r\nconst initialState = {\r\n    weather: {},\r\n    forecast : {},\r\n    loading: false\r\n};\r\n\r\nexport default(state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_WEATHER:\r\n            return {\r\n                ...state,\r\n                weather: action.payload\r\n            }\r\n        case GET_FORECAST:\r\n            return {\r\n                ...state,\r\n                forecast: action.payload\r\n            }\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOADED:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport weatherReducer from './weatherReducer';\r\nimport errorReducer from './errorReducer';\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer,\r\n    errors: errorReducer\r\n});","export const LOADING = 'LOADING';\r\nexport const LOADED = 'LOADED';\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const GET_FORECAST = 'GET_FORECAST';\r\nexport const GET_ERRORS = 'GET_ERRORS';","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/fr';\r\n\r\nclass ForecastItem extends Component {\r\n    render() {\r\n        const { forecast } = this.props;\r\n\r\n        const table = forecast.list && forecast.list.map((item, index) => {\r\n          const date = new Date(item.dt_txt)\r\n          const hour = date.getHours();\r\n          if (hour === 12){\r\n            return (\r\n              <div key={index} className={'level'}>\r\n                <div children={'level-left'}>\r\n                  <div className={'level-item'}>\r\n                    <Moment className={'is-capitalized is-size-6'} locale={'fr'} format={'dddd DD'}>{item.dt_txt}</Moment>\r\n                  </div>\r\n                </div>\r\n                <div className={'level-right'}>\r\n                  <div className={'level-item has-text-right has-text-centered-mobile'}>\r\n                    <div>\r\n                      <p className={'is-size-6'}>{Math.round(item.main.temp)}°C</p>\r\n                      <p className={'is-size-7 is-capitalized has-text-weight-light'}>{item.weather[0].description}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          } else {\r\n            return null\r\n          }\r\n        })\r\n        \r\n        return (\r\n            <div>\r\n              {table}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ForecastItem;","import axios from 'axios';\r\nimport { LOADING, LOADED, GET_WEATHER, GET_ERRORS, GET_FORECAST } from './types';\r\n\r\nconst apiKey = '0ea94cebcaebcce638e48d558f192b4d';\r\n\r\n// Get weather & forecast by geolocation\r\nexport const getDataByGeolocation = (lat, lon, units) => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.all([\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=${units}&lang=fr&appid=${apiKey}`),\r\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&units=${units}&lang=fr&appid=${apiKey}`)\r\n    ])\r\n    .then(axios.spread((weather, forecast) =>  {\r\n        dispatch({\r\n            type: GET_WEATHER,\r\n            payload: weather.data\r\n        })\r\n        dispatch({\r\n            type: GET_FORECAST,\r\n            payload: forecast.data\r\n        })\r\n        dispatch(setLoadingFalse());\r\n    }))\r\n    .catch(err => {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n        dispatch(setLoadingFalse());\r\n    });\r\n}\r\n\r\n// Get weather & forecast by search\r\nexport const getDataBySearch = (city, units) => dispatch => {\r\n    dispatch(setLoadingTrue());\r\n    axios.all([\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=${units}&lang=fr&appid=${apiKey}`),\r\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=${units}&lang=fr&appid=${apiKey}`)\r\n    ])\r\n    .then(axios.spread((weather, forecast) =>  {\r\n        dispatch({\r\n            type: GET_WEATHER,\r\n            payload: weather.data\r\n        })\r\n        dispatch({\r\n            type: GET_FORECAST,\r\n            payload: forecast.data\r\n        })\r\n        dispatch(setLoadingFalse());\r\n    }))\r\n    .catch(err => {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n        dispatch(setLoadingFalse());\r\n    });\r\n}\r\n\r\n// Set loading\r\nexport const setLoadingTrue = () => {\r\n    return {\r\n        type: LOADING\r\n    };\r\n};\r\n\r\n// Set loading\r\nexport const setLoadingFalse = () => {\r\n    return {\r\n        type: LOADED\r\n    };\r\n};","import React, { Component } from 'react';\r\n\r\nimport Loading from './loading.svg';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div id={'loader'}>\r\n                <img className={'loader-img'} src={Loading} alt={'Loading...'} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component { \r\n    render() {\r\n        return (\r\n            <footer className={'footer'}>\r\n                <div className={'content has-text-centered'}>\r\n                    <hr />\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ForecastItem from './ForecastItem';\r\nimport { connect } from 'react-redux';\r\nimport { getDataByGeolocation, getDataBySearch } from '../../actions/weatherActions';\r\n\r\nimport Loader from '../icon/Loader';\r\nimport Footer from '../layout/Footer';\r\nimport backgroundNight from '../icon/background.jpg';\r\nimport backgroundDay from '../icon/background2.jpg';\r\n\r\nclass Weather extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            city: '',\r\n            units: 'metric',\r\n            search: '',\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if (nextProps.errors){\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            });\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        if (navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(position => {\r\n                const lat = position.coords.latitude;\r\n                const lon = position.coords.longitude;\r\n                const units = this.state.units;\r\n\r\n                this.props.getDataByGeolocation(lat, lon, units);\r\n            });\r\n        } else {\r\n            alert('Your navigator doesn\\'t support geolocation');\r\n        };\r\n    };\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const city = this.state.city;\r\n        const units = this.state.units;\r\n        \r\n        this.props.getDataBySearch(city, units);\r\n    };\r\n\r\n    render() {\r\n        const { weather, forecast, loading } = this.props.weather;\r\n        const { errors }= this.state;\r\n        let weatherItem;\r\n\r\n        if (weather === null || loading){\r\n            weatherItem = <Loader />;\r\n        } else {\r\n            weatherItem = <div>\r\n                <ForecastItem forecast={forecast} />\r\n            </div>;\r\n        };\r\n\r\n        const date = new Date();\r\n        const hour = date.getHours();\r\n\r\n        // TODO\r\n        // Show date, hour, render background by hour day/night\r\n\r\n        return (\r\n            <div id={'weather'}>\r\n                <div className={'header'} style={{'background': `url(${hour >= 6 || hour <= 19 ? backgroundDay : backgroundNight}) no-repeat center`}}>\r\n                    <div className={'main-data'}>\r\n                        {weather.weather && weather.weather[0].id >= '600' && weather.weather[0].id <= '622' ? (\r\n                            <div className={'winter-is-coming'}>\r\n                                <div className={'snow snow--near'}></div>\r\n                                <div className={'snow snow--near snow--alt'}></div>\r\n                                <div className={'snow snow--mid'}></div>\r\n                                <div className={'snow snow--mid snow--alt'}></div>\r\n                                <div className={'snow snow--far'}></div>\r\n                                <div className={'snow snow--far snow--alt'}></div>\r\n                            </div>\r\n                        ) : null}\r\n                        {weather.weather && <p style={{'fontSize': '2.5rem'}} className={'has-text-centered has-text-weight-semibold has-text-white is-capitalized'}>{weather.weather[0].description}</p>}\r\n                        {weather.name ? <h3 style={{'fontSize': '1.75rem'}} className={'has-text-centered has-text-weight-normal has-text-white'}>{weather.name}, {weather.sys && <span className={'is-uppercase'}>{weather.sys.country}</span>}</h3> : null}\r\n                        {weather.main && <p style={{'fontSize': '6rem'}} className={'has-text-centered has-text-weight-bold has-text-white'}>{Math.round(weather.main.temp)}°</p>}\r\n                    </div>\r\n                </div>\r\n                <div className={'form'}>\r\n                    <div className={'container'}>\r\n                        <div className={'columns is-centered'}>\r\n                            <div className={'column is-8 has-text-centered'}>\r\n                                <div className={'form-section'} style={{'marginTop': '25px'}}>\r\n                                    <form noValidate onSubmit={this.onSubmit}>\r\n                                        <div className={'field has-addons has-addons-right'}>\r\n                                            <div className={'control is-expanded'}>\r\n                                                <label htmlFor={'city'} hidden>Ville</label>\r\n                                                <input\r\n                                                    className={'input custom-input'}\r\n                                                    type={'text'}\r\n                                                    id={'city'}\r\n                                                    name={'city'}\r\n                                                    placeholder={'Ville a rechercher'}\r\n                                                    onChange={this.onChange}\r\n                                                    value={this.state.city}\r\n                                                />\r\n                                            </div>\r\n                                            <div className={'control'}>\r\n                                                <span className={'select'}>\r\n                                                    <label htmlFor={'units'} hidden>Units</label>\r\n                                                    <select id={'units'} name={'units'} className={'custom-input'} onChange={this.onChange}>\r\n                                                        <option value={'metric'}>°C</option>\r\n                                                        <option value={'imperial'}>°F</option>\r\n                                                    </select>\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className={'control'}>\r\n                                                <button type={'submit'} className={'button is-info submit-button'}>Rechercher</button>\r\n                                            </div>\r\n                                        </div>\r\n                                        {errors.message && (<span>{errors.message}</span>)}\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={'infos'}>\r\n                    <div className={'container'}>\r\n                        <div className={'columns is-centered'}>\r\n                            <div className={'column is-half'}>\r\n                                {weatherItem}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nWeather.propTypes = {\r\n    getDataByGeolocation: PropTypes.func.isRequired,\r\n    getDataBySearch: PropTypes.func.isRequired,\r\n    weather: PropTypes.object.isRequired,\r\n    forecast: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    weather: state.weather,\r\n    forecast: state.weather,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getDataByGeolocation, getDataBySearch })(Weather);","import React, { Component } from 'react';\r\nimport store  from './store';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './app.css';\r\nimport 'bulma/css/bulma.min.css'\r\n\r\nimport Weather from './components/weather/Weather';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className={'app'}>\r\n            <Route exact path={'/'} component={Weather} />\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  };\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}